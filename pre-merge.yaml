steps:
- id: 'branch-name'
  name: 'alpine'
  waitFor: ['-']
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      echo  echo "*****************************DAG CICD - BRANCH:$BRANCH_NAME*******************************************************"
      echo "HEAD BRANCH_NAME: $_HEAD_BRANCH -- BASE BRANCH_NAME:$_BASE_BRANCH -- SHORT_SHA - ${SHORT_SHA} PROJECT_ID: $PROJECT_ID"
      echo "***********************************************************************************************************************"

- id: 'build-test-container'
  name: 'gcr.io/kaniko-project/executor:latest'
  waitFor: ['-']
  args:
    - --destination=${_COMPOSER_LOCATION}-docker.pkg.dev/${PROJECT_ID}/airflow-test-container/cicd
    - --cache=true
    - --cache-ttl=240h

- id: 'run-unit-test'
  name: '${_COMPOSER_LOCATION}-docker.pkg.dev/${PROJECT_ID}/airflow-test-container/cicd:latest'
  waitFor: ['build-test-container']
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      pytest /workspace/tests

- id: 'run-int-test'
  name: '${_COMPOSER_LOCATION}-docker.pkg.dev/${PROJECT_ID}/airflow-test-container/cicd:latest'
  waitFor: ['build-test-container']
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      echo ${BRANCH_NAME} ${COMMIT_SHA}
      project_to_branch_map="($(cat env_mapper.txt))"
      echo ${project_to_branch_map}
      for mapping in ${project_to_branch_map[@]}; do
        project_id=$(echo ${mapping}|cut -d":" -f1)
        dag_bucket=$(echo ${mapping}|cut -d":" -f2)
        branch=$(echo ${mapping}|cut -d":" -f3)
        echo "Project_id=${project_id}, Branch=${branch}"

        if [ ${BRANCH_NAME} == ${branch} ]; then
          echo "Deploying to ${project_id}"
        fi
      done
options:
    dynamic_substitutions: true
substitutions:
  _COMPOSER_LOCATION: europe-west2
  _COMPOSER_ENV: ${PROJECT_ID}